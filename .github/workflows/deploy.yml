name: Deploy to Launch

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install project dependencies
        run: npm install

      - name: Install CLI tools
        run: |
          npm install -g @contentstack/cli
          npm install otplib

      - name: Build project
        run: npm run build

      - name: Set Launch Region
        run: csdx config:set:region AWS-EU

      - name: Login to Contentstack with TOTP (Reliable)
        env:
          CSDX_EMAIL: ${{ secrets.CSDX_EMAIL }}
          CSDX_PASSWORD: ${{ secrets.CSDX_PASSWORD }}
          CSDX_TOTP_SECRET: ${{ secrets.CSDX_TOTP_SECRET }}
        run: |
          node <<'EOF'
          const { spawn } = require('child_process');
          const { authenticator } = require('otplib');

          const otp = authenticator.generate(process.env.CSDX_TOTP_SECRET);
          const login = spawn('csdx', ['auth:login', '-u', process.env.CSDX_EMAIL, '-p', process.env.CSDX_PASSWORD]);

          let sentChannel = false;
          let sentOTP = false;

          login.stdout.on('data', data => {
            const out = data.toString();
            process.stdout.write(out);

            if (!sentChannel && out.includes('OTP channel')) {
              login.stdin.write('1\n'); // Select "Authy App"
              sentChannel = true;
            }

            if (!sentOTP && out.includes('security code')) {
              login.stdin.write(`${otp}\n`); // Send OTP only when fully prompted
              sentOTP = true;
            }
          });

          login.stderr.on('data', err => process.stderr.write(err.toString()));
          login.on('close', code => {
            console.log('ðŸ”š Login process exited with code:', code);
            process.exit(code);
          });
          EOF

      - name: Verify CSDX Login
        run: csdx auth:whoami

      - name: Deploy with Launch
        run: csdx launch --redeploy-latest
