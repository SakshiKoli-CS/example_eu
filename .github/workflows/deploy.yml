name: Deploy to Launch

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check for .cs-launch file
        run: |
          echo "Current directory:"
          pwd
          echo "Files including dotfiles:"
          ls -la

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      - name: Show latest commit ID and message
        run: |
          echo "Latest Commit ID:"
          git log -1 --pretty=format:"%H"
          echo ""
          echo "Latest Commit Message:"
          git log -1 --pretty=format:"%s"

      - name: Install Contentstack CLI
        run: npm install -g @contentstack/cli

      - name: Verify Contentstack CLI Installation
        run: csdx --version

      - name: Set Launch Region
        run: csdx config:set:region AWS-EU

      - name: TOTP Login and Extract Token
        id: login
        env:
          CSDX_EMAIL: ${{ secrets.CSDX_EMAIL }}
          CSDX_PASSWORD: ${{ secrets.CSDX_PASSWORD }}
          CSDX_TOTP_SECRET: ${{ secrets.CSDX_TOTP_SECRET }}
        run: |
          node scripts/loginWithTOTP.js > login_output.txt
          cat login_output.txt
          TOKEN=$(grep -oP '(?<=AuthToken:\s)(\S+)' login_output.txt | tail -1)
          echo "Extracted token: $TOKEN"
          echo "::add-mask::$TOKEN"
          echo "CSDX_AUTH_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Set AuthToken in CLI
        run: csdx config:set authtoken "$CSDX_AUTH_TOKEN"

      - name: Deploy using Launch config
        run: csdx launch --redeploy-latest

        # If deploying to a specific environment:
        # run: csdx launch --redeploy-latest --environment your-env-name

        # If your .cs-launch.json is not in root:
        # run: csdx launch --redeploy-latest --config path/to/.cs-launch.json
