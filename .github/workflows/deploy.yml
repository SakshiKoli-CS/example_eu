name: Deploy to Launch

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install project dependencies
        run: npm install

      - name: Install CLI tools
        run: |
          npm install -g @contentstack/cli
          npm install otplib

      - name: Build project
        run: npm run build

      - name: Set Launch Region
        run: csdx config:set:region AWS-EU

      - name: Authenticate with Contentstack using JavaScript + TOTP
        env:
          CSDX_EMAIL: ${{ secrets.CSDX_EMAIL }}
          CSDX_PASSWORD: ${{ secrets.CSDX_PASSWORD }}
          CSDX_TOTP_SECRET: ${{ secrets.CSDX_TOTP_SECRET }}
        run: |
            node <<EOF
            const { spawn } = require('child_process');
            const { authenticator } = require('otplib');

            const email = process.env.CSDX_EMAIL;
            const password = process.env.CSDX_PASSWORD;
            const secret = process.env.CSDX_TOTP_SECRET;
            const otp = authenticator.generate(secret);

            console.log("🔐 OTP generated:", otp);

            const login = spawn('csdx', ['auth:login', '-u', email, '-p', password]);

            login.stdout.on('data', (data) => {
              const output = data.toString();
              console.log(output);

              if (output.includes('OTP channel')) {
                login.stdin.write('1\n');
              }

              if (output.includes('security code')) {
                login.stdin.write(otp + '\n');
              }
            });

            login.stderr.on('data', (data) => {
              console.error(data.toString());
            });

            login.on('close', (code) => {
              console.log('Login process exited with code:', code);
              process.exit(code);
            });
            EOF

      - name: Verify CSDX Login
        run: csdx auth:whoami

      - name: Deploy with Launch
        run: csdx launch --redeploy-latest
