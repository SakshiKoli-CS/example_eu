name: Deploy to Launch

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install project dependencies
        run: npm install

      - name: Install CLI tools
        run: |
          npm install -g @contentstack/cli
          npm install otplib

      - name: Build project
        run: npm run build

      - name: Set Launch Region
        run: csdx config:set:region AWS-EU

      - name: Login to Contentstack via CSDX CLI
        env:
          CSDX_EMAIL: ${{ secrets.CSDX_EMAIL }}
          CSDX_PASSWORD: ${{ secrets.CSDX_PASSWORD }}
          CSDX_TOTP_SECRET: ${{ secrets.CSDX_TOTP_SECRET }}
        run: |
          node - <<'EOF'
          const { spawn } = require('child_process');
          const { authenticator } = require('otplib');

          const email = process.env.CSDX_EMAIL;
          const password = process.env.CSDX_PASSWORD;
          const secret = process.env.CSDX_TOTP_SECRET;

          const token = authenticator.generate(secret);

          const login = spawn('csdx', ['auth:login', '-u', email, '-p', password], {
            stdio: ['pipe', 'pipe', 'inherit'],
          });

          let buffer = '';
          let channelSelected = false;
          let otpSent = false;

          login.stdout.on('data', (data) => {
            const text = data.toString();
            buffer += text;

            const filtered = text
              .replace(/.*Please select OTP channel.*/gi, '')
              .replace(/.*Please provide the security code.*/gi, '');

            if (filtered.trim()) {
              process.stdout.write(filtered);
            }

            if (!channelSelected && buffer.includes('Please select OTP channel')) {
              channelSelected = true;
              setTimeout(() => {
                login.stdin.write('1\n');
                console.log('\n Selected OTP channel: Authy App');
              }, 300);
            }

            if (!otpSent && buffer.toLowerCase().includes('please provide the security code')) {
              otpSent = true;
              setTimeout(() => {
                login.stdin.write(token + '\n');
                console.log('\n OTP Code: ' + token);
              }, 400);
            }

            if (text.toLowerCase().includes('successfully logged in')) {
              console.log('\n Login successful!');
            }

            if (text.toLowerCase().includes('two-factor authentication verification failed')) {
              console.error('\n OTP verification failed');
            }
          });

          login.on('close', (code) => {
            console.log('\nðŸ”š Login process exited with code:', code);
            process.exit(code);
          });
          EOF

      - name: Verify CSDX Login
        run: csdx auth:whoami

      - name: Deploy with Launch
        run: csdx launch --redeploy-latest
